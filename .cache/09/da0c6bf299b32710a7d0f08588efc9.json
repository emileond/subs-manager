{"id":"node_modules/parse-srcset/src/parse-srcset.js","dependencies":[{"name":"/Users/emilio_sanchez/Documents/subs-manager/package.json","includedInParent":true,"mtime":1602107881855},{"name":"/Users/emilio_sanchez/Documents/subs-manager/node_modules/parse-srcset/package.json","includedInParent":true,"mtime":1602107881814}],"generated":{"js":"var define;\n/**\n * Srcset Parser\n *\n * By Alex Bell |  MIT License\n *\n * JS Parser for the string value that appears in markup <img srcset=\"here\">\n *\n * @returns Array [{url: _, d: _, w: _, h:_}, ...]\n *\n * Based super duper closely on the reference algorithm at:\n * https://html.spec.whatwg.org/multipage/embedded-content.html#parse-a-srcset-attribute\n *\n * Most comments are copied in directly from the spec\n * (except for comments in parens).\n */\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.parseSrcset = factory();\n\t}\n}(this, function () {\n\n\t// 1. Let input be the value passed to this algorithm.\n\treturn function (input) {\n\n\t\t// UTILITY FUNCTIONS\n\n\t\t// Manual is faster than RegEx\n\t\t// http://bjorn.tipling.com/state-and-regular-expressions-in-javascript\n\t\t// http://jsperf.com/whitespace-character/5\n\t\tfunction isSpace(c) {\n\t\t\treturn (c === \"\\u0020\" || // space\n\t\t\tc === \"\\u0009\" || // horizontal tab\n\t\t\tc === \"\\u000A\" || // new line\n\t\t\tc === \"\\u000C\" || // form feed\n\t\t\tc === \"\\u000D\");  // carriage return\n\t\t}\n\n\t\tfunction collectCharacters(regEx) {\n\t\t\tvar chars,\n\t\t\t\tmatch = regEx.exec(input.substring(pos));\n\t\t\tif (match) {\n\t\t\t\tchars = match[ 0 ];\n\t\t\t\tpos += chars.length;\n\t\t\t\treturn chars;\n\t\t\t}\n\t\t}\n\n\t\tvar inputLength = input.length,\n\n\t\t\t// (Don't use \\s, to avoid matching non-breaking space)\n\t\t\tregexLeadingSpaces = /^[ \\t\\n\\r\\u000c]+/,\n\t\t\tregexLeadingCommasOrSpaces = /^[, \\t\\n\\r\\u000c]+/,\n\t\t\tregexLeadingNotSpaces = /^[^ \\t\\n\\r\\u000c]+/,\n\t\t\tregexTrailingCommas = /[,]+$/,\n\t\t\tregexNonNegativeInteger = /^\\d+$/,\n\n\t\t\t// ( Positive or negative or unsigned integers or decimals, without or without exponents.\n\t\t\t// Must include at least one digit.\n\t\t\t// According to spec tests any decimal point must be followed by a digit.\n\t\t\t// No leading plus sign is allowed.)\n\t\t\t// https://html.spec.whatwg.org/multipage/infrastructure.html#valid-floating-point-number\n\t\t\tregexFloatingPoint = /^-?(?:[0-9]+|[0-9]*\\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,\n\n\t\t\turl,\n\t\t\tdescriptors,\n\t\t\tcurrentDescriptor,\n\t\t\tstate,\n\t\t\tc,\n\n\t\t\t// 2. Let position be a pointer into input, initially pointing at the start\n\t\t\t//    of the string.\n\t\t\tpos = 0,\n\n\t\t\t// 3. Let candidates be an initially empty source set.\n\t\t\tcandidates = [];\n\n\t\t// 4. Splitting loop: Collect a sequence of characters that are space\n\t\t//    characters or U+002C COMMA characters. If any U+002C COMMA characters\n\t\t//    were collected, that is a parse error.\n\t\twhile (true) {\n\t\t\tcollectCharacters(regexLeadingCommasOrSpaces);\n\n\t\t\t// 5. If position is past the end of input, return candidates and abort these steps.\n\t\t\tif (pos >= inputLength) {\n\t\t\t\treturn candidates; // (we're done, this is the sole return path)\n\t\t\t}\n\n\t\t\t// 6. Collect a sequence of characters that are not space characters,\n\t\t\t//    and let that be url.\n\t\t\turl = collectCharacters(regexLeadingNotSpaces);\n\n\t\t\t// 7. Let descriptors be a new empty list.\n\t\t\tdescriptors = [];\n\n\t\t\t// 8. If url ends with a U+002C COMMA character (,), follow these substeps:\n\t\t\t//\t\t(1). Remove all trailing U+002C COMMA characters from url. If this removed\n\t\t\t//         more than one character, that is a parse error.\n\t\t\tif (url.slice(-1) === \",\") {\n\t\t\t\turl = url.replace(regexTrailingCommas, \"\");\n\t\t\t\t// (Jump ahead to step 9 to skip tokenization and just push the candidate).\n\t\t\t\tparseDescriptors();\n\n\t\t\t\t//\tOtherwise, follow these substeps:\n\t\t\t} else {\n\t\t\t\ttokenize();\n\t\t\t} // (close else of step 8)\n\n\t\t\t// 16. Return to the step labeled splitting loop.\n\t\t} // (Close of big while loop.)\n\n\t\t/**\n\t\t * Tokenizes descriptor properties prior to parsing\n\t\t * Returns undefined.\n\t\t */\n\t\tfunction tokenize() {\n\n\t\t\t// 8.1. Descriptor tokeniser: Skip whitespace\n\t\t\tcollectCharacters(regexLeadingSpaces);\n\n\t\t\t// 8.2. Let current descriptor be the empty string.\n\t\t\tcurrentDescriptor = \"\";\n\n\t\t\t// 8.3. Let state be in descriptor.\n\t\t\tstate = \"in descriptor\";\n\n\t\t\twhile (true) {\n\n\t\t\t\t// 8.4. Let c be the character at position.\n\t\t\t\tc = input.charAt(pos);\n\n\t\t\t\t//  Do the following depending on the value of state.\n\t\t\t\t//  For the purpose of this step, \"EOF\" is a special character representing\n\t\t\t\t//  that position is past the end of input.\n\n\t\t\t\t// In descriptor\n\t\t\t\tif (state === \"in descriptor\") {\n\t\t\t\t\t// Do the following, depending on the value of c:\n\n\t\t\t\t\t// Space character\n\t\t\t\t\t// If current descriptor is not empty, append current descriptor to\n\t\t\t\t\t// descriptors and let current descriptor be the empty string.\n\t\t\t\t\t// Set state to after descriptor.\n\t\t\t\t\tif (isSpace(c)) {\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t\tcurrentDescriptor = \"\";\n\t\t\t\t\t\t\tstate = \"after descriptor\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// U+002C COMMA (,)\n\t\t\t\t\t\t// Advance position to the next character in input. If current descriptor\n\t\t\t\t\t\t// is not empty, append current descriptor to descriptors. Jump to the step\n\t\t\t\t\t\t// labeled descriptor parser.\n\t\t\t\t\t} else if (c === \",\") {\n\t\t\t\t\t\tpos += 1;\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// U+0028 LEFT PARENTHESIS (()\n\t\t\t\t\t\t// Append c to current descriptor. Set state to in parens.\n\t\t\t\t\t} else if (c === \"\\u0028\") {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t\tstate = \"in parens\";\n\n\t\t\t\t\t\t// EOF\n\t\t\t\t\t\t// If current descriptor is not empty, append current descriptor to\n\t\t\t\t\t\t// descriptors. Jump to the step labeled descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Append c to current descriptor.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t}\n\t\t\t\t\t// (end \"in descriptor\"\n\n\t\t\t\t\t// In parens\n\t\t\t\t} else if (state === \"in parens\") {\n\n\t\t\t\t\t// U+0029 RIGHT PARENTHESIS ())\n\t\t\t\t\t// Append c to current descriptor. Set state to in descriptor.\n\t\t\t\t\tif (c === \")\") {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t\tstate = \"in descriptor\";\n\n\t\t\t\t\t\t// EOF\n\t\t\t\t\t\t// Append current descriptor to descriptors. Jump to the step labeled\n\t\t\t\t\t\t// descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Append c to current descriptor.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t}\n\n\t\t\t\t\t// After descriptor\n\t\t\t\t} else if (state === \"after descriptor\") {\n\n\t\t\t\t\t// Do the following, depending on the value of c:\n\t\t\t\t\t// Space character: Stay in this state.\n\t\t\t\t\tif (isSpace(c)) {\n\n\t\t\t\t\t\t// EOF: Jump to the step labeled descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Set state to in descriptor. Set position to the previous character in input.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = \"in descriptor\";\n\t\t\t\t\t\tpos -= 1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Advance position to the next character in input.\n\t\t\t\tpos += 1;\n\n\t\t\t\t// Repeat this step.\n\t\t\t} // (close while true loop)\n\t\t}\n\n\t\t/**\n\t\t * Adds descriptor properties to a candidate, pushes to the candidates array\n\t\t * @return undefined\n\t\t */\n\t\t// Declared outside of the while loop so that it's only created once.\n\t\tfunction parseDescriptors() {\n\n\t\t\t// 9. Descriptor parser: Let error be no.\n\t\t\tvar pError = false,\n\n\t\t\t\t// 10. Let width be absent.\n\t\t\t\t// 11. Let density be absent.\n\t\t\t\t// 12. Let future-compat-h be absent. (We're implementing it now as h)\n\t\t\t\tw, d, h, i,\n\t\t\t\tcandidate = {},\n\t\t\t\tdesc, lastChar, value, intVal, floatVal;\n\n\t\t\t// 13. For each descriptor in descriptors, run the appropriate set of steps\n\t\t\t// from the following list:\n\t\t\tfor (i = 0 ; i < descriptors.length; i++) {\n\t\t\t\tdesc = descriptors[ i ];\n\n\t\t\t\tlastChar = desc[ desc.length - 1 ];\n\t\t\t\tvalue = desc.substring(0, desc.length - 1);\n\t\t\t\tintVal = parseInt(value, 10);\n\t\t\t\tfloatVal = parseFloat(value);\n\n\t\t\t\t// If the descriptor consists of a valid non-negative integer followed by\n\t\t\t\t// a U+0077 LATIN SMALL LETTER W character\n\t\t\t\tif (regexNonNegativeInteger.test(value) && (lastChar === \"w\")) {\n\n\t\t\t\t\t// If width and density are not both absent, then let error be yes.\n\t\t\t\t\tif (w || d) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing non-negative integers to the descriptor.\n\t\t\t\t\t// If the result is zero, let error be yes.\n\t\t\t\t\t// Otherwise, let width be the result.\n\t\t\t\t\tif (intVal === 0) {pError = true;} else {w = intVal;}\n\n\t\t\t\t\t// If the descriptor consists of a valid floating-point number followed by\n\t\t\t\t\t// a U+0078 LATIN SMALL LETTER X character\n\t\t\t\t} else if (regexFloatingPoint.test(value) && (lastChar === \"x\")) {\n\n\t\t\t\t\t// If width, density and future-compat-h are not all absent, then let error\n\t\t\t\t\t// be yes.\n\t\t\t\t\tif (w || d || h) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing floating-point number values to the descriptor.\n\t\t\t\t\t// If the result is less than zero, let error be yes. Otherwise, let density\n\t\t\t\t\t// be the result.\n\t\t\t\t\tif (floatVal < 0) {pError = true;} else {d = floatVal;}\n\n\t\t\t\t\t// If the descriptor consists of a valid non-negative integer followed by\n\t\t\t\t\t// a U+0068 LATIN SMALL LETTER H character\n\t\t\t\t} else if (regexNonNegativeInteger.test(value) && (lastChar === \"h\")) {\n\n\t\t\t\t\t// If height and density are not both absent, then let error be yes.\n\t\t\t\t\tif (h || d) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing non-negative integers to the descriptor.\n\t\t\t\t\t// If the result is zero, let error be yes. Otherwise, let future-compat-h\n\t\t\t\t\t// be the result.\n\t\t\t\t\tif (intVal === 0) {pError = true;} else {h = intVal;}\n\n\t\t\t\t\t// Anything else, Let error be yes.\n\t\t\t\t} else {pError = true;}\n\t\t\t} // (close step 13 for loop)\n\n\t\t\t// 15. If error is still no, then append a new image source to candidates whose\n\t\t\t// URL is url, associated with a width width if not absent and a pixel\n\t\t\t// density density if not absent. Otherwise, there is a parse error.\n\t\t\tif (!pError) {\n\t\t\t\tcandidate.url = url;\n\t\t\t\tif (w) { candidate.w = w;}\n\t\t\t\tif (d) { candidate.d = d;}\n\t\t\t\tif (h) { candidate.h = h;}\n\t\t\t\tcandidates.push(candidate);\n\t\t\t} else if (console && console.log) {\n\t\t\t\tconsole.log(\"Invalid srcset descriptor found in '\" +\n\t\t\t\t\tinput + \"' at '\" + desc + \"'.\");\n\t\t\t}\n\t\t} // (close parseDescriptors fn)\n\n\t}\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/parse-srcset/src/parse-srcset.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}}],"sources":{"node_modules/parse-srcset/src/parse-srcset.js":"/**\n * Srcset Parser\n *\n * By Alex Bell |  MIT License\n *\n * JS Parser for the string value that appears in markup <img srcset=\"here\">\n *\n * @returns Array [{url: _, d: _, w: _, h:_}, ...]\n *\n * Based super duper closely on the reference algorithm at:\n * https://html.spec.whatwg.org/multipage/embedded-content.html#parse-a-srcset-attribute\n *\n * Most comments are copied in directly from the spec\n * (except for comments in parens).\n */\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.parseSrcset = factory();\n\t}\n}(this, function () {\n\n\t// 1. Let input be the value passed to this algorithm.\n\treturn function (input) {\n\n\t\t// UTILITY FUNCTIONS\n\n\t\t// Manual is faster than RegEx\n\t\t// http://bjorn.tipling.com/state-and-regular-expressions-in-javascript\n\t\t// http://jsperf.com/whitespace-character/5\n\t\tfunction isSpace(c) {\n\t\t\treturn (c === \"\\u0020\" || // space\n\t\t\tc === \"\\u0009\" || // horizontal tab\n\t\t\tc === \"\\u000A\" || // new line\n\t\t\tc === \"\\u000C\" || // form feed\n\t\t\tc === \"\\u000D\");  // carriage return\n\t\t}\n\n\t\tfunction collectCharacters(regEx) {\n\t\t\tvar chars,\n\t\t\t\tmatch = regEx.exec(input.substring(pos));\n\t\t\tif (match) {\n\t\t\t\tchars = match[ 0 ];\n\t\t\t\tpos += chars.length;\n\t\t\t\treturn chars;\n\t\t\t}\n\t\t}\n\n\t\tvar inputLength = input.length,\n\n\t\t\t// (Don't use \\s, to avoid matching non-breaking space)\n\t\t\tregexLeadingSpaces = /^[ \\t\\n\\r\\u000c]+/,\n\t\t\tregexLeadingCommasOrSpaces = /^[, \\t\\n\\r\\u000c]+/,\n\t\t\tregexLeadingNotSpaces = /^[^ \\t\\n\\r\\u000c]+/,\n\t\t\tregexTrailingCommas = /[,]+$/,\n\t\t\tregexNonNegativeInteger = /^\\d+$/,\n\n\t\t\t// ( Positive or negative or unsigned integers or decimals, without or without exponents.\n\t\t\t// Must include at least one digit.\n\t\t\t// According to spec tests any decimal point must be followed by a digit.\n\t\t\t// No leading plus sign is allowed.)\n\t\t\t// https://html.spec.whatwg.org/multipage/infrastructure.html#valid-floating-point-number\n\t\t\tregexFloatingPoint = /^-?(?:[0-9]+|[0-9]*\\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,\n\n\t\t\turl,\n\t\t\tdescriptors,\n\t\t\tcurrentDescriptor,\n\t\t\tstate,\n\t\t\tc,\n\n\t\t\t// 2. Let position be a pointer into input, initially pointing at the start\n\t\t\t//    of the string.\n\t\t\tpos = 0,\n\n\t\t\t// 3. Let candidates be an initially empty source set.\n\t\t\tcandidates = [];\n\n\t\t// 4. Splitting loop: Collect a sequence of characters that are space\n\t\t//    characters or U+002C COMMA characters. If any U+002C COMMA characters\n\t\t//    were collected, that is a parse error.\n\t\twhile (true) {\n\t\t\tcollectCharacters(regexLeadingCommasOrSpaces);\n\n\t\t\t// 5. If position is past the end of input, return candidates and abort these steps.\n\t\t\tif (pos >= inputLength) {\n\t\t\t\treturn candidates; // (we're done, this is the sole return path)\n\t\t\t}\n\n\t\t\t// 6. Collect a sequence of characters that are not space characters,\n\t\t\t//    and let that be url.\n\t\t\turl = collectCharacters(regexLeadingNotSpaces);\n\n\t\t\t// 7. Let descriptors be a new empty list.\n\t\t\tdescriptors = [];\n\n\t\t\t// 8. If url ends with a U+002C COMMA character (,), follow these substeps:\n\t\t\t//\t\t(1). Remove all trailing U+002C COMMA characters from url. If this removed\n\t\t\t//         more than one character, that is a parse error.\n\t\t\tif (url.slice(-1) === \",\") {\n\t\t\t\turl = url.replace(regexTrailingCommas, \"\");\n\t\t\t\t// (Jump ahead to step 9 to skip tokenization and just push the candidate).\n\t\t\t\tparseDescriptors();\n\n\t\t\t\t//\tOtherwise, follow these substeps:\n\t\t\t} else {\n\t\t\t\ttokenize();\n\t\t\t} // (close else of step 8)\n\n\t\t\t// 16. Return to the step labeled splitting loop.\n\t\t} // (Close of big while loop.)\n\n\t\t/**\n\t\t * Tokenizes descriptor properties prior to parsing\n\t\t * Returns undefined.\n\t\t */\n\t\tfunction tokenize() {\n\n\t\t\t// 8.1. Descriptor tokeniser: Skip whitespace\n\t\t\tcollectCharacters(regexLeadingSpaces);\n\n\t\t\t// 8.2. Let current descriptor be the empty string.\n\t\t\tcurrentDescriptor = \"\";\n\n\t\t\t// 8.3. Let state be in descriptor.\n\t\t\tstate = \"in descriptor\";\n\n\t\t\twhile (true) {\n\n\t\t\t\t// 8.4. Let c be the character at position.\n\t\t\t\tc = input.charAt(pos);\n\n\t\t\t\t//  Do the following depending on the value of state.\n\t\t\t\t//  For the purpose of this step, \"EOF\" is a special character representing\n\t\t\t\t//  that position is past the end of input.\n\n\t\t\t\t// In descriptor\n\t\t\t\tif (state === \"in descriptor\") {\n\t\t\t\t\t// Do the following, depending on the value of c:\n\n\t\t\t\t\t// Space character\n\t\t\t\t\t// If current descriptor is not empty, append current descriptor to\n\t\t\t\t\t// descriptors and let current descriptor be the empty string.\n\t\t\t\t\t// Set state to after descriptor.\n\t\t\t\t\tif (isSpace(c)) {\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t\tcurrentDescriptor = \"\";\n\t\t\t\t\t\t\tstate = \"after descriptor\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// U+002C COMMA (,)\n\t\t\t\t\t\t// Advance position to the next character in input. If current descriptor\n\t\t\t\t\t\t// is not empty, append current descriptor to descriptors. Jump to the step\n\t\t\t\t\t\t// labeled descriptor parser.\n\t\t\t\t\t} else if (c === \",\") {\n\t\t\t\t\t\tpos += 1;\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// U+0028 LEFT PARENTHESIS (()\n\t\t\t\t\t\t// Append c to current descriptor. Set state to in parens.\n\t\t\t\t\t} else if (c === \"\\u0028\") {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t\tstate = \"in parens\";\n\n\t\t\t\t\t\t// EOF\n\t\t\t\t\t\t// If current descriptor is not empty, append current descriptor to\n\t\t\t\t\t\t// descriptors. Jump to the step labeled descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tif (currentDescriptor) {\n\t\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Append c to current descriptor.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t}\n\t\t\t\t\t// (end \"in descriptor\"\n\n\t\t\t\t\t// In parens\n\t\t\t\t} else if (state === \"in parens\") {\n\n\t\t\t\t\t// U+0029 RIGHT PARENTHESIS ())\n\t\t\t\t\t// Append c to current descriptor. Set state to in descriptor.\n\t\t\t\t\tif (c === \")\") {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t\tstate = \"in descriptor\";\n\n\t\t\t\t\t\t// EOF\n\t\t\t\t\t\t// Append current descriptor to descriptors. Jump to the step labeled\n\t\t\t\t\t\t// descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tdescriptors.push(currentDescriptor);\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Append c to current descriptor.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentDescriptor = currentDescriptor + c;\n\t\t\t\t\t}\n\n\t\t\t\t\t// After descriptor\n\t\t\t\t} else if (state === \"after descriptor\") {\n\n\t\t\t\t\t// Do the following, depending on the value of c:\n\t\t\t\t\t// Space character: Stay in this state.\n\t\t\t\t\tif (isSpace(c)) {\n\n\t\t\t\t\t\t// EOF: Jump to the step labeled descriptor parser.\n\t\t\t\t\t} else if (c === \"\") {\n\t\t\t\t\t\tparseDescriptors();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t// Anything else\n\t\t\t\t\t\t// Set state to in descriptor. Set position to the previous character in input.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = \"in descriptor\";\n\t\t\t\t\t\tpos -= 1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Advance position to the next character in input.\n\t\t\t\tpos += 1;\n\n\t\t\t\t// Repeat this step.\n\t\t\t} // (close while true loop)\n\t\t}\n\n\t\t/**\n\t\t * Adds descriptor properties to a candidate, pushes to the candidates array\n\t\t * @return undefined\n\t\t */\n\t\t// Declared outside of the while loop so that it's only created once.\n\t\tfunction parseDescriptors() {\n\n\t\t\t// 9. Descriptor parser: Let error be no.\n\t\t\tvar pError = false,\n\n\t\t\t\t// 10. Let width be absent.\n\t\t\t\t// 11. Let density be absent.\n\t\t\t\t// 12. Let future-compat-h be absent. (We're implementing it now as h)\n\t\t\t\tw, d, h, i,\n\t\t\t\tcandidate = {},\n\t\t\t\tdesc, lastChar, value, intVal, floatVal;\n\n\t\t\t// 13. For each descriptor in descriptors, run the appropriate set of steps\n\t\t\t// from the following list:\n\t\t\tfor (i = 0 ; i < descriptors.length; i++) {\n\t\t\t\tdesc = descriptors[ i ];\n\n\t\t\t\tlastChar = desc[ desc.length - 1 ];\n\t\t\t\tvalue = desc.substring(0, desc.length - 1);\n\t\t\t\tintVal = parseInt(value, 10);\n\t\t\t\tfloatVal = parseFloat(value);\n\n\t\t\t\t// If the descriptor consists of a valid non-negative integer followed by\n\t\t\t\t// a U+0077 LATIN SMALL LETTER W character\n\t\t\t\tif (regexNonNegativeInteger.test(value) && (lastChar === \"w\")) {\n\n\t\t\t\t\t// If width and density are not both absent, then let error be yes.\n\t\t\t\t\tif (w || d) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing non-negative integers to the descriptor.\n\t\t\t\t\t// If the result is zero, let error be yes.\n\t\t\t\t\t// Otherwise, let width be the result.\n\t\t\t\t\tif (intVal === 0) {pError = true;} else {w = intVal;}\n\n\t\t\t\t\t// If the descriptor consists of a valid floating-point number followed by\n\t\t\t\t\t// a U+0078 LATIN SMALL LETTER X character\n\t\t\t\t} else if (regexFloatingPoint.test(value) && (lastChar === \"x\")) {\n\n\t\t\t\t\t// If width, density and future-compat-h are not all absent, then let error\n\t\t\t\t\t// be yes.\n\t\t\t\t\tif (w || d || h) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing floating-point number values to the descriptor.\n\t\t\t\t\t// If the result is less than zero, let error be yes. Otherwise, let density\n\t\t\t\t\t// be the result.\n\t\t\t\t\tif (floatVal < 0) {pError = true;} else {d = floatVal;}\n\n\t\t\t\t\t// If the descriptor consists of a valid non-negative integer followed by\n\t\t\t\t\t// a U+0068 LATIN SMALL LETTER H character\n\t\t\t\t} else if (regexNonNegativeInteger.test(value) && (lastChar === \"h\")) {\n\n\t\t\t\t\t// If height and density are not both absent, then let error be yes.\n\t\t\t\t\tif (h || d) {pError = true;}\n\n\t\t\t\t\t// Apply the rules for parsing non-negative integers to the descriptor.\n\t\t\t\t\t// If the result is zero, let error be yes. Otherwise, let future-compat-h\n\t\t\t\t\t// be the result.\n\t\t\t\t\tif (intVal === 0) {pError = true;} else {h = intVal;}\n\n\t\t\t\t\t// Anything else, Let error be yes.\n\t\t\t\t} else {pError = true;}\n\t\t\t} // (close step 13 for loop)\n\n\t\t\t// 15. If error is still no, then append a new image source to candidates whose\n\t\t\t// URL is url, associated with a width width if not absent and a pixel\n\t\t\t// density density if not absent. Otherwise, there is a parse error.\n\t\t\tif (!pError) {\n\t\t\t\tcandidate.url = url;\n\t\t\t\tif (w) { candidate.w = w;}\n\t\t\t\tif (d) { candidate.d = d;}\n\t\t\t\tif (h) { candidate.h = h;}\n\t\t\t\tcandidates.push(candidate);\n\t\t\t} else if (console && console.log) {\n\t\t\t\tconsole.log(\"Invalid srcset descriptor found in '\" +\n\t\t\t\t\tinput + \"' at '\" + desc + \"'.\");\n\t\t\t}\n\t\t} // (close parseDescriptors fn)\n\n\t}\n}));\n"},"lineCount":332}},"error":null,"hash":"0336dabfdc00b4b65aee2cd090c6e7fc","cacheData":{"env":{}}}